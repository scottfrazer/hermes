grammar {
  parser<ll1> {
    $start = list($sub, :comma)
    $sub = $item
    $sub = $e
    $item = :b
    $item = :a
    $e = parser<expression> {
      (*:left) $e = $e :add $e
      (-:left) $e = $e :subtract $e
      (*:left) $e = $e :multiply $e
      (-:left) $e = $e :divide $e
      (*:unary) $e = :subtract $e
      $e = :lsquare list($e, :comma) :rsquare
      $e = :lbrace list($e, :comma) :rbrace
      $e = :identifier :lparen list($e, :comma) :rparen
      $e = :lparen $e :rparen
      $e = :identifier
      $e = :number
    }
  }
}