grammar {
  parser<ll1> {
    $start = $e
    $e = parser<expression> {
      (*:left) $e = $e :add $e -> Add( left=$0, right=$2 )
      (-:left) $e = $e :sub $e -> Subtract( left=$0, right=$2 )
      (*:left) $e = $e :mul $e -> Multiply( left=$0, right=$2 )
      (-:left) $e = $e :div $e -> Divide( left=$0, right=$2 )
      (*:unary) $e = :sub $e -> UMinus( arg=$1 )
      $e = :lparen $e :rparen -> $1
      $e = :identifier
      $e = :number
    }
  }
}