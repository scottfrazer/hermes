<grammar (line 1 col 1) `grammar`>
<lbrace (line 1 col 9) `{`>
<parser_ll1 (line 2 col 3) `parser<ll1>`>
<lbrace (line 2 col 15) `{`>
<ll1_rule_hint (line 3 col 5) ``>
<nonterminal (line 3 col 5) `start`>
<equals (line 3 col 12) `=`>
<identifier (line 3 col 14) `list`>
<lparen (line 3 col 18) `(`>
<nonterminal (line 3 col 19) `statement`>
<comma (line 3 col 29) `,`>
<terminal (line 3 col 31) `semi`>
<rparen (line 3 col 36) `)`>
<arrow (line 3 col 38) `->`>
<identifier (line 3 col 41) `Program`>
<lparen (line 3 col 48) `(`>
<identifier (line 3 col 50) `statements`>
<equals (line 3 col 60) `=`>
<nonterminal_reference (line 3 col 61) `0`>
<rparen (line 3 col 64) `)`>
<ll1_rule_hint (line 4 col 5) ``>
<nonterminal (line 4 col 5) `start`>
<equals (line 4 col 12) `=`>
<terminal (line 4 col 14) `_empty`>
<ll1_rule_hint (line 5 col 5) ``>
<nonterminal (line 5 col 5) `statement`>
<equals (line 5 col 16) `=`>
<nonterminal (line 5 col 18) `e`>
<ll1_rule_hint (line 6 col 5) ``>
<nonterminal (line 6 col 5) `statement`>
<equals (line 6 col 16) `=`>
<nonterminal (line 6 col 18) `for`>
<ll1_rule_hint (line 7 col 5) ``>
<nonterminal (line 7 col 5) `for`>
<equals (line 7 col 10) `=`>
<terminal (line 7 col 12) `for`>
<terminal (line 7 col 17) `lparen`>
<nonterminal (line 7 col 25) `forsub`>
<terminal (line 7 col 33) `semi`>
<nonterminal (line 7 col 39) `forsub`>
<terminal (line 7 col 47) `semi`>
<nonterminal (line 7 col 53) `forsub`>
<terminal (line 7 col 61) `rparen`>
<terminal (line 7 col 69) `lbrace`>
<nonterminal (line 7 col 77) `forbody`>
<terminal (line 7 col 86) `rbrace`>
<arrow (line 7 col 94) `->`>
<identifier (line 7 col 97) `For`>
<lparen (line 7 col 100) `(`>
<identifier (line 7 col 102) `decl`>
<equals (line 7 col 106) `=`>
<nonterminal_reference (line 7 col 107) `2`>
<comma (line 7 col 109) `,`>
<identifier (line 7 col 111) `cond`>
<equals (line 7 col 115) `=`>
<nonterminal_reference (line 7 col 116) `4`>
<comma (line 7 col 118) `,`>
<identifier (line 7 col 120) `iter`>
<equals (line 7 col 124) `=`>
<nonterminal_reference (line 7 col 125) `6`>
<comma (line 7 col 127) `,`>
<identifier (line 7 col 129) `body`>
<equals (line 7 col 133) `=`>
<nonterminal_reference (line 7 col 134) `9`>
<rparen (line 7 col 137) `)`>
<ll1_rule_hint (line 8 col 5) ``>
<nonterminal (line 8 col 5) `forsub`>
<equals (line 8 col 13) `=`>
<nonterminal (line 8 col 15) `e`>
<ll1_rule_hint (line 9 col 5) ``>
<nonterminal (line 9 col 5) `forsub`>
<equals (line 9 col 13) `=`>
<terminal (line 9 col 15) `_empty`>
<ll1_rule_hint (line 10 col 5) ``>
<nonterminal (line 10 col 5) `forbody`>
<equals (line 10 col 14) `=`>
<nonterminal (line 10 col 16) `statement`>
<terminal (line 10 col 27) `semi`>
<nonterminal (line 10 col 33) `forbody`>
<ll1_rule_hint (line 11 col 5) ``>
<nonterminal (line 11 col 5) `forbody`>
<equals (line 11 col 14) `=`>
<terminal (line 11 col 16) `_empty`>
<ll1_rule_hint (line 12 col 5) ``>
<nonterminal (line 12 col 5) `e`>
<equals (line 12 col 8) `=`>
<parser_expression (line 12 col 10) `parser<expression>`>
<lbrace (line 12 col 29) `{`>
<lparen (line 13 col 7) `(`>
<asterisk (line 13 col 7) `*`>
<colon (line 13 col 7) `:`>
<right (line 13 col 7) `right`>
<rparen (line 13 col 7) `)`>
<expr_rule_hint (line 13 col 17) ``>
<nonterminal (line 13 col 17) `e`>
<equals (line 13 col 17) `=`>
<infix_rule_hint (line 13 col 17) ``>
<nonterminal (line 13 col 17) `e`>
<terminal (line 13 col 17) `eq`>
<nonterminal (line 13 col 17) `e`>
<arrow (line 13 col 32) `->`>
<identifier (line 13 col 35) `Assign`>
<lparen (line 13 col 41) `(`>
<identifier (line 13 col 43) `lhs`>
<equals (line 13 col 46) `=`>
<nonterminal_reference (line 13 col 47) `0`>
<comma (line 13 col 49) `,`>
<identifier (line 13 col 51) `rhs`>
<equals (line 13 col 54) `=`>
<nonterminal_reference (line 13 col 55) `2`>
<rparen (line 13 col 58) `)`>
<lparen (line 14 col 7) `(`>
<asterisk (line 14 col 7) `*`>
<colon (line 14 col 7) `:`>
<left (line 14 col 7) `left`>
<rparen (line 14 col 7) `)`>
<expr_rule_hint (line 14 col 16) ``>
<nonterminal (line 14 col 16) `e`>
<equals (line 14 col 16) `=`>
<infix_rule_hint (line 14 col 16) ``>
<nonterminal (line 14 col 16) `e`>
<terminal (line 14 col 16) `add`>
<nonterminal (line 14 col 16) `e`>
<arrow (line 14 col 32) `->`>
<identifier (line 14 col 35) `Add`>
<lparen (line 14 col 38) `(`>
<identifier (line 14 col 40) `lhs`>
<equals (line 14 col 43) `=`>
<nonterminal_reference (line 14 col 44) `0`>
<comma (line 14 col 46) `,`>
<identifier (line 14 col 48) `rhs`>
<equals (line 14 col 51) `=`>
<nonterminal_reference (line 14 col 52) `2`>
<rparen (line 14 col 55) `)`>
<lparen (line 15 col 7) `(`>
<dash (line 15 col 7) `-`>
<colon (line 15 col 7) `:`>
<left (line 15 col 7) `left`>
<rparen (line 15 col 7) `)`>
<expr_rule_hint (line 15 col 16) ``>
<nonterminal (line 15 col 16) `e`>
<equals (line 15 col 16) `=`>
<infix_rule_hint (line 15 col 16) ``>
<nonterminal (line 15 col 16) `e`>
<terminal (line 15 col 16) `sub`>
<nonterminal (line 15 col 16) `e`>
<arrow (line 15 col 32) `->`>
<identifier (line 15 col 35) `Subtract`>
<lparen (line 15 col 43) `(`>
<identifier (line 15 col 45) `lhs`>
<equals (line 15 col 48) `=`>
<nonterminal_reference (line 15 col 49) `0`>
<comma (line 15 col 51) `,`>
<identifier (line 15 col 53) `rhs`>
<equals (line 15 col 56) `=`>
<nonterminal_reference (line 15 col 57) `2`>
<rparen (line 15 col 60) `)`>
<lparen (line 16 col 7) `(`>
<asterisk (line 16 col 7) `*`>
<colon (line 16 col 7) `:`>
<left (line 16 col 7) `left`>
<rparen (line 16 col 7) `)`>
<expr_rule_hint (line 16 col 16) ``>
<nonterminal (line 16 col 16) `e`>
<equals (line 16 col 16) `=`>
<infix_rule_hint (line 16 col 16) ``>
<nonterminal (line 16 col 16) `e`>
<terminal (line 16 col 16) `mul`>
<nonterminal (line 16 col 16) `e`>
<arrow (line 16 col 32) `->`>
<identifier (line 16 col 35) `Multiply`>
<lparen (line 16 col 43) `(`>
<identifier (line 16 col 45) `lhs`>
<equals (line 16 col 48) `=`>
<nonterminal_reference (line 16 col 49) `0`>
<comma (line 16 col 51) `,`>
<identifier (line 16 col 53) `rhs`>
<equals (line 16 col 56) `=`>
<nonterminal_reference (line 16 col 57) `2`>
<rparen (line 16 col 60) `)`>
<lparen (line 17 col 7) `(`>
<dash (line 17 col 7) `-`>
<colon (line 17 col 7) `:`>
<left (line 17 col 7) `left`>
<rparen (line 17 col 7) `)`>
<expr_rule_hint (line 17 col 16) ``>
<nonterminal (line 17 col 16) `e`>
<equals (line 17 col 16) `=`>
<infix_rule_hint (line 17 col 16) ``>
<nonterminal (line 17 col 16) `e`>
<terminal (line 17 col 16) `div`>
<nonterminal (line 17 col 16) `e`>
<arrow (line 17 col 32) `->`>
<identifier (line 17 col 35) `Divide`>
<lparen (line 17 col 41) `(`>
<identifier (line 17 col 43) `lhs`>
<equals (line 17 col 46) `=`>
<nonterminal_reference (line 17 col 47) `0`>
<comma (line 17 col 49) `,`>
<identifier (line 17 col 51) `rhs`>
<equals (line 17 col 54) `=`>
<nonterminal_reference (line 17 col 55) `2`>
<rparen (line 17 col 58) `)`>
<lparen (line 18 col 7) `(`>
<asterisk (line 18 col 7) `*`>
<colon (line 18 col 7) `:`>
<left (line 18 col 7) `left`>
<rparen (line 18 col 7) `)`>
<expr_rule_hint (line 18 col 16) ``>
<nonterminal (line 18 col 16) `e`>
<equals (line 18 col 16) `=`>
<infix_rule_hint (line 18 col 16) ``>
<nonterminal (line 18 col 16) `e`>
<terminal (line 18 col 16) `power`>
<nonterminal (line 18 col 16) `e`>
<arrow (line 18 col 34) `->`>
<identifier (line 18 col 37) `Power`>
<lparen (line 18 col 42) `(`>
<identifier (line 18 col 44) `lhs`>
<equals (line 18 col 47) `=`>
<nonterminal_reference (line 18 col 48) `0`>
<comma (line 18 col 50) `,`>
<identifier (line 18 col 52) `rhs`>
<equals (line 18 col 55) `=`>
<nonterminal_reference (line 18 col 56) `2`>
<rparen (line 18 col 59) `)`>
<lparen (line 19 col 7) `(`>
<asterisk (line 19 col 7) `*`>
<colon (line 19 col 7) `:`>
<unary (line 19 col 7) `unary`>
<rparen (line 19 col 7) `)`>
<expr_rule_hint (line 19 col 17) ``>
<nonterminal (line 19 col 17) `e`>
<equals (line 19 col 17) `=`>
<prefix_rule_hint (line 19 col 17) ``>
<terminal (line 19 col 17) `sub`>
<nonterminal (line 19 col 17) `e`>
<arrow (line 19 col 30) `->`>
<identifier (line 19 col 33) `UMinus`>
<lparen (line 19 col 39) `(`>
<identifier (line 19 col 41) `arg`>
<equals (line 19 col 44) `=`>
<nonterminal_reference (line 19 col 45) `1`>
<rparen (line 19 col 48) `)`>
<expr_rule_hint (line 20 col 7) ``>
<nonterminal (line 20 col 7) `e`>
<equals (line 20 col 7) `=`>
<mixfix_rule_hint (line 20 col 7) ``>
<terminal (line 20 col 12) `n`>
<expr_rule_hint (line 21 col 7) ``>
<nonterminal (line 21 col 7) `e`>
<equals (line 21 col 7) `=`>
<mixfix_rule_hint (line 21 col 7) ``>
<terminal (line 21 col 12) `s`>
<expr_rule_hint (line 22 col 7) ``>
<nonterminal (line 22 col 7) `e`>
<equals (line 22 col 7) `=`>
<mixfix_rule_hint (line 22 col 7) ``>
<terminal (line 22 col 12) `identifier`>
<rbrace (line 23 col 5) `}`>
<rbrace (line 24 col 3) `}`>
<rbrace (line 25 col 1) `}`>