<grammar (line 1 col 1) `grammar`>
<lbrace (line 1 col 9) `{`>
<parser_ll1 (line 2 col 3) `parser<ll1>`>
<lbrace (line 2 col 15) `{`>
<ll1_rule_hint (line 3 col 5) ``>
<nonterminal (line 3 col 5) `start`>
<equals (line 3 col 12) `=`>
<identifier (line 3 col 14) `list`>
<lparen (line 3 col 18) `(`>
<nonterminal (line 3 col 19) `sub`>
<comma (line 3 col 23) `,`>
<terminal (line 3 col 25) `comma`>
<rparen (line 3 col 31) `)`>
<ll1_rule_hint (line 4 col 5) ``>
<nonterminal (line 4 col 5) `sub`>
<equals (line 4 col 10) `=`>
<nonterminal (line 4 col 12) `item`>
<pipe (line 4 col 18) `|`>
<nonterminal (line 4 col 20) `e`>
<ll1_rule_hint (line 5 col 5) ``>
<nonterminal (line 5 col 5) `item`>
<equals (line 5 col 11) `=`>
<terminal (line 5 col 13) `a`>
<pipe (line 5 col 16) `|`>
<terminal (line 5 col 18) `b`>
<ll1_rule_hint (line 6 col 5) ``>
<nonterminal (line 6 col 5) `type_name`>
<equals (line 6 col 16) `=`>
<terminal (line 6 col 18) `int`>
<pipe (line 6 col 23) `|`>
<terminal (line 6 col 25) `char`>
<ll1_rule_hint (line 7 col 5) ``>
<nonterminal (line 7 col 5) `e`>
<equals (line 7 col 8) `=`>
<parser_expression (line 7 col 10) `parser<expression>`>
<lbrace (line 7 col 29) `{`>
<lparen (line 8 col 7) `(`>
<asterisk (line 8 col 7) `*`>
<colon (line 8 col 7) `:`>
<left (line 8 col 7) `left`>
<rparen (line 8 col 7) `)`>
<expr_rule_hint (line 8 col 16) ``>
<nonterminal (line 8 col 16) `e`>
<equals (line 8 col 16) `=`>
<infix_rule_hint (line 8 col 16) ``>
<nonterminal (line 8 col 16) `e`>
<terminal (line 8 col 16) `add`>
<nonterminal (line 8 col 16) `e`>
<arrow (line 8 col 32) `->`>
<identifier (line 8 col 35) `Add`>
<lparen (line 8 col 38) `(`>
<identifier (line 8 col 39) `lhs`>
<equals (line 8 col 42) `=`>
<nonterminal_reference (line 8 col 43) `0`>
<comma (line 8 col 45) `,`>
<identifier (line 8 col 47) `rhs`>
<equals (line 8 col 50) `=`>
<nonterminal_reference (line 8 col 51) `2`>
<rparen (line 8 col 53) `)`>
<lparen (line 9 col 7) `(`>
<dash (line 9 col 7) `-`>
<colon (line 9 col 7) `:`>
<left (line 9 col 7) `left`>
<rparen (line 9 col 7) `)`>
<expr_rule_hint (line 9 col 16) ``>
<nonterminal (line 9 col 16) `e`>
<equals (line 9 col 16) `=`>
<infix_rule_hint (line 9 col 16) ``>
<nonterminal (line 9 col 16) `e`>
<terminal (line 9 col 16) `subtract`>
<nonterminal (line 9 col 16) `e`>
<arrow (line 9 col 37) `->`>
<identifier (line 9 col 40) `Subtract`>
<lparen (line 9 col 48) `(`>
<identifier (line 9 col 49) `lhs`>
<equals (line 9 col 52) `=`>
<nonterminal_reference (line 9 col 53) `0`>
<comma (line 9 col 55) `,`>
<identifier (line 9 col 57) `rhs`>
<equals (line 9 col 60) `=`>
<nonterminal_reference (line 9 col 61) `2`>
<rparen (line 9 col 63) `)`>
<lparen (line 10 col 7) `(`>
<asterisk (line 10 col 7) `*`>
<colon (line 10 col 7) `:`>
<left (line 10 col 7) `left`>
<rparen (line 10 col 7) `)`>
<expr_rule_hint (line 10 col 16) ``>
<nonterminal (line 10 col 16) `e`>
<equals (line 10 col 16) `=`>
<infix_rule_hint (line 10 col 16) ``>
<nonterminal (line 10 col 16) `e`>
<terminal (line 10 col 16) `multiply`>
<nonterminal (line 10 col 16) `e`>
<arrow (line 10 col 37) `->`>
<identifier (line 10 col 40) `Multiply`>
<lparen (line 10 col 48) `(`>
<identifier (line 10 col 49) `lhs`>
<equals (line 10 col 52) `=`>
<nonterminal_reference (line 10 col 53) `0`>
<comma (line 10 col 55) `,`>
<identifier (line 10 col 57) `rhs`>
<equals (line 10 col 60) `=`>
<nonterminal_reference (line 10 col 61) `2`>
<rparen (line 10 col 63) `)`>
<lparen (line 11 col 7) `(`>
<dash (line 11 col 7) `-`>
<colon (line 11 col 7) `:`>
<left (line 11 col 7) `left`>
<rparen (line 11 col 7) `)`>
<expr_rule_hint (line 11 col 16) ``>
<nonterminal (line 11 col 16) `e`>
<equals (line 11 col 16) `=`>
<infix_rule_hint (line 11 col 16) ``>
<nonterminal (line 11 col 16) `e`>
<terminal (line 11 col 16) `divide`>
<nonterminal (line 11 col 16) `e`>
<arrow (line 11 col 35) `->`>
<identifier (line 11 col 38) `Divide`>
<lparen (line 11 col 44) `(`>
<identifier (line 11 col 45) `lhs`>
<equals (line 11 col 48) `=`>
<nonterminal_reference (line 11 col 49) `0`>
<comma (line 11 col 51) `,`>
<identifier (line 11 col 53) `rhs`>
<equals (line 11 col 56) `=`>
<nonterminal_reference (line 11 col 57) `2`>
<rparen (line 11 col 59) `)`>
<lparen (line 12 col 7) `(`>
<asterisk (line 12 col 7) `*`>
<colon (line 12 col 7) `:`>
<left (line 12 col 7) `left`>
<rparen (line 12 col 7) `)`>
<expr_rule_hint (line 12 col 16) ``>
<nonterminal (line 12 col 16) `e`>
<equals (line 12 col 16) `=`>
<mixfix_rule_hint (line 12 col 16) ``>
<terminal (line 12 col 21) `lparen_cast`>
<nonterminal (line 12 col 34) `type_name`>
<terminal (line 12 col 45) `rparen`>
<expression_divider (line 12 col 53) `<=>`>
<terminal (line 12 col 57) `lbrace`>
<identifier (line 12 col 65) `list`>
<lparen (line 12 col 69) `(`>
<terminal (line 12 col 70) `item`>
<comma (line 12 col 75) `,`>
<terminal (line 12 col 77) `comma`>
<rparen (line 12 col 83) `)`>
<identifier (line 12 col 85) `optional`>
<lparen (line 12 col 93) `(`>
<terminal (line 12 col 94) `comma`>
<rparen (line 12 col 100) `)`>
<terminal (line 12 col 102) `rbrace`>
<arrow (line 12 col 110) `->`>
<identifier (line 12 col 113) `TypeInitializion`>
<lparen (line 12 col 129) `(`>
<identifier (line 12 col 131) `type`>
<equals (line 12 col 135) `=`>
<nonterminal_reference (line 12 col 136) `1`>
<comma (line 12 col 138) `,`>
<identifier (line 12 col 140) `initializer`>
<equals (line 12 col 151) `=`>
<nonterminal_reference (line 12 col 152) `4`>
<rparen (line 12 col 155) `)`>
<lparen (line 13 col 7) `(`>
<dash (line 13 col 7) `-`>
<colon (line 13 col 7) `:`>
<left (line 13 col 7) `left`>
<rparen (line 13 col 7) `)`>
<expr_rule_hint (line 13 col 16) ``>
<nonterminal (line 13 col 16) `e`>
<equals (line 13 col 16) `=`>
<mixfix_rule_hint (line 13 col 16) ``>
<terminal (line 13 col 21) `identifier`>
<expression_divider (line 13 col 33) `<=>`>
<terminal (line 13 col 37) `lparen`>
<identifier (line 13 col 45) `list`>
<lparen (line 13 col 49) `(`>
<nonterminal (line 13 col 50) `e`>
<comma (line 13 col 52) `,`>
<terminal (line 13 col 54) `comma`>
<rparen (line 13 col 60) `)`>
<terminal (line 13 col 62) `rparen`>
<arrow (line 13 col 70) `->`>
<identifier (line 13 col 73) `FunctionCall`>
<lparen (line 13 col 85) `(`>
<identifier (line 13 col 87) `name`>
<equals (line 13 col 91) `=`>
<nonterminal_reference (line 13 col 92) `$`>
<comma (line 13 col 94) `,`>
<identifier (line 13 col 96) `params`>
<equals (line 13 col 102) `=`>
<nonterminal_reference (line 13 col 103) `2`>
<rparen (line 13 col 106) `)`>
<lparen (line 14 col 7) `(`>
<asterisk (line 14 col 7) `*`>
<colon (line 14 col 7) `:`>
<left (line 14 col 7) `left`>
<rparen (line 14 col 7) `)`>
<expr_rule_hint (line 14 col 16) ``>
<nonterminal (line 14 col 16) `e`>
<equals (line 14 col 16) `=`>
<mixfix_rule_hint (line 14 col 16) ``>
<identifier (line 14 col 21) `optional`>
<lparen (line 14 col 29) `(`>
<nonterminal (line 14 col 30) `e`>
<rparen (line 14 col 32) `)`>
<expression_divider (line 14 col 34) `<=>`>
<terminal (line 14 col 38) `lsquare`>
<identifier (line 14 col 47) `list`>
<lparen (line 14 col 51) `(`>
<terminal (line 14 col 52) `item`>
<comma (line 14 col 57) `,`>
<terminal (line 14 col 59) `comma`>
<rparen (line 14 col 65) `)`>
<terminal (line 14 col 67) `rsquare`>
<arrow (line 14 col 76) `->`>
<identifier (line 14 col 79) `ExprPlusList`>
<lparen (line 14 col 91) `(`>
<identifier (line 14 col 93) `expr`>
<equals (line 14 col 97) `=`>
<nonterminal_reference (line 14 col 98) `$`>
<comma (line 14 col 100) `,`>
<identifier (line 14 col 102) `params`>
<equals (line 14 col 108) `=`>
<nonterminal_reference (line 14 col 109) `2`>
<rparen (line 14 col 112) `)`>
<lparen (line 15 col 7) `(`>
<asterisk (line 15 col 7) `*`>
<colon (line 15 col 7) `:`>
<unary (line 15 col 7) `unary`>
<rparen (line 15 col 7) `)`>
<expr_rule_hint (line 15 col 17) ``>
<nonterminal (line 15 col 17) `e`>
<equals (line 15 col 17) `=`>
<prefix_rule_hint (line 15 col 17) ``>
<terminal (line 15 col 17) `subtract`>
<nonterminal (line 15 col 17) `e`>
<arrow (line 15 col 35) `->`>
<identifier (line 15 col 38) `UMinus`>
<lparen (line 15 col 44) `(`>
<identifier (line 15 col 45) `arg`>
<equals (line 15 col 48) `=`>
<nonterminal_reference (line 15 col 49) `1`>
<rparen (line 15 col 51) `)`>
<expr_rule_hint (line 16 col 7) ``>
<nonterminal (line 16 col 7) `e`>
<equals (line 16 col 7) `=`>
<mixfix_rule_hint (line 16 col 7) ``>
<terminal (line 16 col 12) `lsquare`>
<identifier (line 16 col 21) `list`>
<lparen (line 16 col 25) `(`>
<nonterminal (line 16 col 26) `e`>
<comma (line 16 col 28) `,`>
<terminal (line 16 col 30) `comma`>
<rparen (line 16 col 36) `)`>
<terminal (line 16 col 38) `rsquare`>
<arrow (line 16 col 47) `->`>
<nonterminal_reference (line 16 col 50) `1`>
<expr_rule_hint (line 17 col 7) ``>
<nonterminal (line 17 col 7) `e`>
<equals (line 17 col 7) `=`>
<mixfix_rule_hint (line 17 col 7) ``>
<terminal (line 17 col 12) `lbrace`>
<identifier (line 17 col 20) `list`>
<lparen (line 17 col 24) `(`>
<nonterminal (line 17 col 25) `e`>
<comma (line 17 col 27) `,`>
<terminal (line 17 col 29) `comma`>
<rparen (line 17 col 35) `)`>
<terminal (line 17 col 37) `rbrace`>
<arrow (line 17 col 45) `->`>
<nonterminal_reference (line 17 col 48) `1`>
<expr_rule_hint (line 18 col 7) ``>
<nonterminal (line 18 col 7) `e`>
<equals (line 18 col 7) `=`>
<mixfix_rule_hint (line 18 col 7) ``>
<terminal (line 18 col 12) `lparen`>
<nonterminal (line 18 col 20) `e`>
<terminal (line 18 col 23) `rparen`>
<arrow (line 18 col 31) `->`>
<nonterminal_reference (line 18 col 34) `1`>
<expr_rule_hint (line 19 col 7) ``>
<nonterminal (line 19 col 7) `e`>
<equals (line 19 col 7) `=`>
<mixfix_rule_hint (line 19 col 7) ``>
<terminal (line 19 col 12) `identifier`>
<expr_rule_hint (line 20 col 7) ``>
<nonterminal (line 20 col 7) `e`>
<equals (line 20 col 7) `=`>
<mixfix_rule_hint (line 20 col 7) ``>
<terminal (line 20 col 12) `number`>
<rbrace (line 21 col 5) `}`>
<rbrace (line 22 col 3) `}`>
<rbrace (line 23 col 1) `}`>