(Grammar:
  body=[
    (Lexer:
      atoms=[
        (Regex:
          regex=<grammar.hgr:3:5 regex "cidccysn">,
          options=None,
          onmatch=[
            (Null:

            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:4:5 regex "cidmb3In">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:4:16 terminal "Zm9y">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:5:5 regex "cic7Jw==">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:5:14 terminal "c2VtaQ==">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:6:5 regex "cidcKCc=">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:6:15 terminal "bHBhcmVu">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:7:5 regex "cidcKSc=">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:7:15 terminal "cnBhcmVu">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:8:5 regex "cidceyc=">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:8:15 terminal "bGJyYWNl">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:9:5 regex "cidcfSc=">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:9:15 terminal "cmJyYWNl">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:10:5 regex "cidbMC05XSsn">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:10:19 terminal "bg==">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:11:5 regex "ciciW14iXSoiJw==">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:11:20 terminal "cw==">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:12:5 regex "cidbYS16QS1aXSsn">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:12:22 terminal "aWRlbnRpZmllcg==">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:13:5 regex "cic9Jw==">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:13:14 terminal "ZXE=">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:14:5 regex "cidcKyc=">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:14:15 terminal "YWRk">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:15:5 regex "cictJw==">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:15:14 terminal "c3Vi">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:16:5 regex "cidcXic=">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:16:15 terminal "cG93ZXI=">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:17:5 regex "cidcKic=">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:17:15 terminal "bXVs">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:18:5 regex "cicvJw==">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:18:14 terminal "ZGl2">,
              group=None
            )
          ]
        )
      ]
    ),
    (Parser:
      rules=[
        (Rule:
          nonterminal=<grammar.hgr:21:6 nonterminal "c3RhcnQ=">,
          production=[
            (Production:
              morphemes=[
                (Macro:
                  name=<grammar.hgr:21:14 identifier "bGlzdA==">,
                  parameters=[
                    <grammar.hgr:21:20 nonterminal "c3RhdGVtZW50">,
                    <grammar.hgr:21:32 terminal "c2VtaQ==">
                  ]
                )
              ],
              ast=(AstTransformation:
                name=<grammar.hgr:21:41 identifier "UHJvZ3JhbQ==">,
                parameters=[
                  (AstParameter:
                    name=<grammar.hgr:21:50 identifier "c3RhdGVtZW50cw==">,
                    index=<grammar.hgr:21:62 nonterminal_reference "MA==">
                  )
                ]
              )
            )
          ]
        ),
        (Rule:
          nonterminal=<grammar.hgr:22:6 nonterminal "c3RhcnQ=">,
          production=[
            (Production:
              morphemes=[
                <grammar.hgr:22:15 terminal "X2VtcHR5">
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<grammar.hgr:23:6 nonterminal "c3RhdGVtZW50">,
          production=[
            (Production:
              morphemes=[
                <grammar.hgr:23:19 nonterminal "ZQ==">
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<grammar.hgr:24:6 nonterminal "c3RhdGVtZW50">,
          production=[
            (Production:
              morphemes=[
                <grammar.hgr:24:19 nonterminal "Zm9y">
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<grammar.hgr:25:6 nonterminal "Zm9y">,
          production=[
            (Production:
              morphemes=[
                <grammar.hgr:25:13 terminal "Zm9y">,
                <grammar.hgr:25:18 terminal "bHBhcmVu">,
                <grammar.hgr:25:26 nonterminal "Zm9yc3Vi">,
                <grammar.hgr:25:34 terminal "c2VtaQ==">,
                <grammar.hgr:25:40 nonterminal "Zm9yc3Vi">,
                <grammar.hgr:25:48 terminal "c2VtaQ==">,
                <grammar.hgr:25:54 nonterminal "Zm9yc3Vi">,
                <grammar.hgr:25:62 terminal "cnBhcmVu">,
                <grammar.hgr:25:70 terminal "bGJyYWNl">,
                <grammar.hgr:25:78 nonterminal "Zm9yYm9keQ==">,
                <grammar.hgr:25:87 terminal "cmJyYWNl">
              ],
              ast=(AstTransformation:
                name=<grammar.hgr:25:97 identifier "Rm9y">,
                parameters=[
                  (AstParameter:
                    name=<grammar.hgr:25:102 identifier "ZGVjbA==">,
                    index=<grammar.hgr:25:108 nonterminal_reference "Mg==">
                  ),
                  (AstParameter:
                    name=<grammar.hgr:25:111 identifier "Y29uZA==">,
                    index=<grammar.hgr:25:117 nonterminal_reference "NA==">
                  ),
                  (AstParameter:
                    name=<grammar.hgr:25:120 identifier "aXRlcg==">,
                    index=<grammar.hgr:25:126 nonterminal_reference "Ng==">
                  ),
                  (AstParameter:
                    name=<grammar.hgr:25:129 identifier "Ym9keQ==">,
                    index=<grammar.hgr:25:135 nonterminal_reference "OQ==">
                  )
                ]
              )
            )
          ]
        ),
        (Rule:
          nonterminal=<grammar.hgr:26:6 nonterminal "Zm9yc3Vi">,
          production=[
            (Production:
              morphemes=[
                <grammar.hgr:26:16 nonterminal "ZQ==">
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<grammar.hgr:27:6 nonterminal "Zm9yc3Vi">,
          production=[
            (Production:
              morphemes=[
                <grammar.hgr:27:16 terminal "X2VtcHR5">
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<grammar.hgr:28:6 nonterminal "Zm9yYm9keQ==">,
          production=[
            (Production:
              morphemes=[
                <grammar.hgr:28:17 nonterminal "c3RhdGVtZW50">,
                <grammar.hgr:28:28 terminal "c2VtaQ==">,
                <grammar.hgr:28:34 nonterminal "Zm9yYm9keQ==">
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<grammar.hgr:29:6 nonterminal "Zm9yYm9keQ==">,
          production=[
            (Production:
              morphemes=[
                <grammar.hgr:29:17 terminal "X2VtcHR5">
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<grammar.hgr:30:6 nonterminal "ZQ==">,
          production=(ExpressionParser:
            rules=[
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<grammar.hgr:31:8 asterisk "Kg==">,
                  associativity=<grammar.hgr:31:10 right "cmlnaHQ=">
                ),
                nonterminal=<grammar.hgr:31:18 nonterminal "ZQ==">,
                production=(InfixProduction:
                  morphemes=[
                    <grammar.hgr:31:23 nonterminal "ZQ==">,
                    <grammar.hgr:31:26 terminal "ZXE=">,
                    <grammar.hgr:31:30 nonterminal "ZQ==">
                  ],
                  ast=(AstTransformation:
                    name=<grammar.hgr:31:35 identifier "QXNzaWdu">,
                    parameters=[
                      (AstParameter:
                        name=<grammar.hgr:31:43 identifier "bGhz">,
                        index=<grammar.hgr:31:48 nonterminal_reference "MA==">
                      ),
                      (AstParameter:
                        name=<grammar.hgr:31:51 identifier "cmhz">,
                        index=<grammar.hgr:31:56 nonterminal_reference "Mg==">
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<grammar.hgr:32:8 asterisk "Kg==">,
                  associativity=<grammar.hgr:32:10 left "bGVmdA==">
                ),
                nonterminal=<grammar.hgr:32:17 nonterminal "ZQ==">,
                production=(InfixProduction:
                  morphemes=[
                    <grammar.hgr:32:22 nonterminal "ZQ==">,
                    <grammar.hgr:32:25 terminal "YWRk">,
                    <grammar.hgr:32:30 nonterminal "ZQ==">
                  ],
                  ast=(AstTransformation:
                    name=<grammar.hgr:32:35 identifier "QWRk">,
                    parameters=[
                      (AstParameter:
                        name=<grammar.hgr:32:40 identifier "bGhz">,
                        index=<grammar.hgr:32:45 nonterminal_reference "MA==">
                      ),
                      (AstParameter:
                        name=<grammar.hgr:32:48 identifier "cmhz">,
                        index=<grammar.hgr:32:53 nonterminal_reference "Mg==">
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<grammar.hgr:33:8 dash "LQ==">,
                  associativity=<grammar.hgr:33:10 left "bGVmdA==">
                ),
                nonterminal=<grammar.hgr:33:17 nonterminal "ZQ==">,
                production=(InfixProduction:
                  morphemes=[
                    <grammar.hgr:33:22 nonterminal "ZQ==">,
                    <grammar.hgr:33:25 terminal "c3Vi">,
                    <grammar.hgr:33:30 nonterminal "ZQ==">
                  ],
                  ast=(AstTransformation:
                    name=<grammar.hgr:33:35 identifier "U3VidHJhY3Q=">,
                    parameters=[
                      (AstParameter:
                        name=<grammar.hgr:33:45 identifier "bGhz">,
                        index=<grammar.hgr:33:50 nonterminal_reference "MA==">
                      ),
                      (AstParameter:
                        name=<grammar.hgr:33:53 identifier "cmhz">,
                        index=<grammar.hgr:33:58 nonterminal_reference "Mg==">
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<grammar.hgr:34:8 asterisk "Kg==">,
                  associativity=<grammar.hgr:34:10 left "bGVmdA==">
                ),
                nonterminal=<grammar.hgr:34:17 nonterminal "ZQ==">,
                production=(InfixProduction:
                  morphemes=[
                    <grammar.hgr:34:22 nonterminal "ZQ==">,
                    <grammar.hgr:34:25 terminal "bXVs">,
                    <grammar.hgr:34:30 nonterminal "ZQ==">
                  ],
                  ast=(AstTransformation:
                    name=<grammar.hgr:34:35 identifier "TXVsdGlwbHk=">,
                    parameters=[
                      (AstParameter:
                        name=<grammar.hgr:34:45 identifier "bGhz">,
                        index=<grammar.hgr:34:50 nonterminal_reference "MA==">
                      ),
                      (AstParameter:
                        name=<grammar.hgr:34:53 identifier "cmhz">,
                        index=<grammar.hgr:34:58 nonterminal_reference "Mg==">
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<grammar.hgr:35:8 dash "LQ==">,
                  associativity=<grammar.hgr:35:10 left "bGVmdA==">
                ),
                nonterminal=<grammar.hgr:35:17 nonterminal "ZQ==">,
                production=(InfixProduction:
                  morphemes=[
                    <grammar.hgr:35:22 nonterminal "ZQ==">,
                    <grammar.hgr:35:25 terminal "ZGl2">,
                    <grammar.hgr:35:30 nonterminal "ZQ==">
                  ],
                  ast=(AstTransformation:
                    name=<grammar.hgr:35:35 identifier "RGl2aWRl">,
                    parameters=[
                      (AstParameter:
                        name=<grammar.hgr:35:43 identifier "bGhz">,
                        index=<grammar.hgr:35:48 nonterminal_reference "MA==">
                      ),
                      (AstParameter:
                        name=<grammar.hgr:35:51 identifier "cmhz">,
                        index=<grammar.hgr:35:56 nonterminal_reference "Mg==">
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<grammar.hgr:36:8 asterisk "Kg==">,
                  associativity=<grammar.hgr:36:10 left "bGVmdA==">
                ),
                nonterminal=<grammar.hgr:36:17 nonterminal "ZQ==">,
                production=(InfixProduction:
                  morphemes=[
                    <grammar.hgr:36:22 nonterminal "ZQ==">,
                    <grammar.hgr:36:25 terminal "cG93ZXI=">,
                    <grammar.hgr:36:32 nonterminal "ZQ==">
                  ],
                  ast=(AstTransformation:
                    name=<grammar.hgr:36:37 identifier "UG93ZXI=">,
                    parameters=[
                      (AstParameter:
                        name=<grammar.hgr:36:44 identifier "bGhz">,
                        index=<grammar.hgr:36:49 nonterminal_reference "MA==">
                      ),
                      (AstParameter:
                        name=<grammar.hgr:36:52 identifier "cmhz">,
                        index=<grammar.hgr:36:57 nonterminal_reference "Mg==">
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<grammar.hgr:37:8 asterisk "Kg==">,
                  associativity=<grammar.hgr:37:10 unary "dW5hcnk=">
                ),
                nonterminal=<grammar.hgr:37:18 nonterminal "ZQ==">,
                production=(PrefixProduction:
                  morphemes=[
                    <grammar.hgr:37:23 terminal "c3Vi">,
                    <grammar.hgr:37:28 nonterminal "ZQ==">
                  ],
                  ast=(AstTransformation:
                    name=<grammar.hgr:37:33 identifier "VU1pbnVz">,
                    parameters=[
                      (AstParameter:
                        name=<grammar.hgr:37:41 identifier "YXJn">,
                        index=<grammar.hgr:37:46 nonterminal_reference "MQ==">
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=None,
                nonterminal=<grammar.hgr:38:8 nonterminal "ZQ==">,
                production=(MixfixProduction:
                  nud=[
                    <grammar.hgr:38:13 terminal "bg==">
                  ],
                  nud_ast=None,
                  led=None,
                  ast=None
                )
              ),
              (ExpressionRule:
                precedence=None,
                nonterminal=<grammar.hgr:39:8 nonterminal "ZQ==">,
                production=(MixfixProduction:
                  nud=[
                    <grammar.hgr:39:13 terminal "cw==">
                  ],
                  nud_ast=None,
                  led=None,
                  ast=None
                )
              ),
              (ExpressionRule:
                precedence=None,
                nonterminal=<grammar.hgr:40:8 nonterminal "ZQ==">,
                production=(MixfixProduction:
                  nud=[
                    <grammar.hgr:40:13 terminal "aWRlbnRpZmllcg==">
                  ],
                  nud_ast=None,
                  led=None,
                  ast=None
                )
              )
            ]
          )
        )
      ]
    )
  ]
)