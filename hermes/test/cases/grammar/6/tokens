<grammar (line 1 col 1) `grammar`>
<lbrace (line 1 col 9) `{`>
<parser_ll1 (line 2 col 3) `parser<ll1>`>
<lbrace (line 2 col 15) `{`>
<ll1_rule_hint (line 3 col 5) ``>
<nonterminal (line 3 col 5) `start`>
<equals (line 3 col 12) `=`>
<identifier (line 3 col 14) `list`>
<lparen (line 3 col 18) `(`>
<nonterminal (line 3 col 19) `sub`>
<comma (line 3 col 23) `,`>
<terminal (line 3 col 25) `comma`>
<rparen (line 3 col 31) `)`>
<ll1_rule_hint (line 4 col 5) ``>
<nonterminal (line 4 col 5) `sub`>
<equals (line 4 col 10) `=`>
<nonterminal (line 4 col 12) `item`>
<ll1_rule_hint (line 5 col 5) ``>
<nonterminal (line 5 col 5) `sub`>
<equals (line 5 col 10) `=`>
<nonterminal (line 5 col 12) `e`>
<ll1_rule_hint (line 6 col 5) ``>
<nonterminal (line 6 col 5) `item`>
<equals (line 6 col 11) `=`>
<terminal (line 6 col 13) `b`>
<ll1_rule_hint (line 7 col 5) ``>
<nonterminal (line 7 col 5) `item`>
<equals (line 7 col 11) `=`>
<terminal (line 7 col 13) `a`>
<ll1_rule_hint (line 8 col 5) ``>
<nonterminal (line 8 col 5) `e`>
<equals (line 8 col 8) `=`>
<parser_expression (line 8 col 10) `parser<expression>`>
<lbrace (line 8 col 29) `{`>
<lparen (line 9 col 7) `(`>
<asterisk (line 9 col 7) `*`>
<colon (line 9 col 7) `:`>
<left (line 9 col 7) `left`>
<rparen (line 9 col 7) `)`>
<expr_rule_hint (line 9 col 16) ``>
<nonterminal (line 9 col 16) `e`>
<equals (line 9 col 16) `=`>
<infix_rule_hint (line 9 col 16) ``>
<nonterminal (line 9 col 16) `e`>
<terminal (line 9 col 16) `add`>
<nonterminal (line 9 col 16) `e`>
<lparen (line 10 col 7) `(`>
<dash (line 10 col 7) `-`>
<colon (line 10 col 7) `:`>
<left (line 10 col 7) `left`>
<rparen (line 10 col 7) `)`>
<expr_rule_hint (line 10 col 16) ``>
<nonterminal (line 10 col 16) `e`>
<equals (line 10 col 16) `=`>
<infix_rule_hint (line 10 col 16) ``>
<nonterminal (line 10 col 16) `e`>
<terminal (line 10 col 16) `subtract`>
<nonterminal (line 10 col 16) `e`>
<lparen (line 11 col 7) `(`>
<asterisk (line 11 col 7) `*`>
<colon (line 11 col 7) `:`>
<left (line 11 col 7) `left`>
<rparen (line 11 col 7) `)`>
<expr_rule_hint (line 11 col 16) ``>
<nonterminal (line 11 col 16) `e`>
<equals (line 11 col 16) `=`>
<infix_rule_hint (line 11 col 16) ``>
<nonterminal (line 11 col 16) `e`>
<terminal (line 11 col 16) `multiply`>
<nonterminal (line 11 col 16) `e`>
<lparen (line 12 col 7) `(`>
<dash (line 12 col 7) `-`>
<colon (line 12 col 7) `:`>
<left (line 12 col 7) `left`>
<rparen (line 12 col 7) `)`>
<expr_rule_hint (line 12 col 16) ``>
<nonterminal (line 12 col 16) `e`>
<equals (line 12 col 16) `=`>
<infix_rule_hint (line 12 col 16) ``>
<nonterminal (line 12 col 16) `e`>
<terminal (line 12 col 16) `divide`>
<nonterminal (line 12 col 16) `e`>
<lparen (line 13 col 7) `(`>
<asterisk (line 13 col 7) `*`>
<colon (line 13 col 7) `:`>
<unary (line 13 col 7) `unary`>
<rparen (line 13 col 7) `)`>
<expr_rule_hint (line 13 col 17) ``>
<nonterminal (line 13 col 17) `e`>
<equals (line 13 col 17) `=`>
<prefix_rule_hint (line 13 col 17) ``>
<terminal (line 13 col 17) `subtract`>
<nonterminal (line 13 col 17) `e`>
<expr_rule_hint (line 14 col 7) ``>
<nonterminal (line 14 col 7) `e`>
<equals (line 14 col 7) `=`>
<mixfix_rule_hint (line 14 col 7) ``>
<terminal (line 14 col 12) `lsquare`>
<identifier (line 14 col 21) `list`>
<lparen (line 14 col 25) `(`>
<nonterminal (line 14 col 26) `e`>
<comma (line 14 col 28) `,`>
<terminal (line 14 col 30) `comma`>
<rparen (line 14 col 36) `)`>
<terminal (line 14 col 38) `rsquare`>
<expr_rule_hint (line 15 col 7) ``>
<nonterminal (line 15 col 7) `e`>
<equals (line 15 col 7) `=`>
<mixfix_rule_hint (line 15 col 7) ``>
<terminal (line 15 col 12) `lbrace`>
<identifier (line 15 col 20) `list`>
<lparen (line 15 col 24) `(`>
<nonterminal (line 15 col 25) `e`>
<comma (line 15 col 27) `,`>
<terminal (line 15 col 29) `comma`>
<rparen (line 15 col 35) `)`>
<terminal (line 15 col 37) `rbrace`>
<expr_rule_hint (line 16 col 7) ``>
<nonterminal (line 16 col 7) `e`>
<equals (line 16 col 7) `=`>
<mixfix_rule_hint (line 16 col 7) ``>
<terminal (line 16 col 12) `identifier`>
<terminal (line 16 col 24) `lparen`>
<identifier (line 16 col 32) `list`>
<lparen (line 16 col 36) `(`>
<nonterminal (line 16 col 37) `e`>
<comma (line 16 col 39) `,`>
<terminal (line 16 col 41) `comma`>
<rparen (line 16 col 47) `)`>
<terminal (line 16 col 49) `rparen`>
<expr_rule_hint (line 17 col 7) ``>
<nonterminal (line 17 col 7) `e`>
<equals (line 17 col 7) `=`>
<mixfix_rule_hint (line 17 col 7) ``>
<terminal (line 17 col 12) `lparen`>
<nonterminal (line 17 col 20) `e`>
<terminal (line 17 col 23) `rparen`>
<expr_rule_hint (line 18 col 7) ``>
<nonterminal (line 18 col 7) `e`>
<equals (line 18 col 7) `=`>
<mixfix_rule_hint (line 18 col 7) ``>
<terminal (line 18 col 12) `identifier`>
<expr_rule_hint (line 19 col 7) ``>
<nonterminal (line 19 col 7) `e`>
<equals (line 19 col 7) `=`>
<mixfix_rule_hint (line 19 col 7) ``>
<terminal (line 19 col 12) `number`>
<rbrace (line 20 col 5) `}`>
<rbrace (line 21 col 3) `}`>
<rbrace (line 22 col 1) `}`>