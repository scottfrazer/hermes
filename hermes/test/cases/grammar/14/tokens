<grammar (line 1 col 1) `grammar`>
<lbrace (line 1 col 9) `{`>
<parser_ll1 (line 2 col 3) `parser<ll1>`>
<lbrace (line 2 col 15) `{`>
<ll1_rule_hint (line 3 col 5) ``>
<nonterminal (line 3 col 5) `program`>
<equals (line 3 col 14) `=`>
<nonterminal (line 3 col 16) `block`>
<terminal (line 3 col 23) `dot`>
<ll1_rule_hint (line 4 col 5) ``>
<nonterminal (line 4 col 5) `block`>
<equals (line 4 col 12) `=`>
<nonterminal (line 4 col 14) `block_const`>
<nonterminal (line 4 col 27) `block_var`>
<nonterminal (line 4 col 38) `block_proc`>
<nonterminal (line 4 col 50) `statement`>
<ll1_rule_hint (line 5 col 5) ``>
<nonterminal (line 5 col 5) `block_const`>
<equals (line 5 col 18) `=`>
<terminal (line 5 col 20) `const`>
<nonterminal (line 5 col 27) `ident`>
<terminal (line 5 col 34) `equal`>
<nonterminal (line 5 col 41) `number`>
<nonterminal (line 5 col 49) `block_const1`>
<ll1_rule_hint (line 6 col 5) ``>
<nonterminal (line 6 col 5) `block_const`>
<equals (line 6 col 18) `=`>
<terminal (line 6 col 20) `_empty`>
<ll1_rule_hint (line 7 col 5) ``>
<nonterminal (line 7 col 5) `block_const1`>
<equals (line 7 col 19) `=`>
<terminal (line 7 col 21) `comma`>
<nonterminal (line 7 col 28) `ident`>
<terminal (line 7 col 35) `equal`>
<nonterminal (line 7 col 42) `number`>
<ll1_rule_hint (line 8 col 5) ``>
<nonterminal (line 8 col 5) `block_const1`>
<equals (line 8 col 19) `=`>
<terminal (line 8 col 21) `_empty`>
<ll1_rule_hint (line 9 col 5) ``>
<nonterminal (line 9 col 5) `block_var`>
<equals (line 9 col 16) `=`>
<terminal (line 9 col 18) `var`>
<nonterminal (line 9 col 23) `ident`>
<nonterminal (line 9 col 30) `block_var1`>
<terminal (line 9 col 42) `semi`>
<ll1_rule_hint (line 10 col 5) ``>
<nonterminal (line 10 col 5) `block_var`>
<equals (line 10 col 16) `=`>
<terminal (line 10 col 18) `_empty`>
<ll1_rule_hint (line 11 col 5) ``>
<nonterminal (line 11 col 5) `block_var1`>
<equals (line 11 col 17) `=`>
<terminal (line 11 col 19) `comma`>
<nonterminal (line 11 col 26) `ident`>
<ll1_rule_hint (line 12 col 5) ``>
<nonterminal (line 12 col 5) `block_var1`>
<equals (line 12 col 17) `=`>
<terminal (line 12 col 19) `_empty`>
<ll1_rule_hint (line 13 col 5) ``>
<nonterminal (line 13 col 5) `block_proc`>
<equals (line 13 col 17) `=`>
<terminal (line 13 col 19) `procedure`>
<nonterminal (line 13 col 30) `ident`>
<terminal (line 13 col 37) `semi`>
<nonterminal (line 13 col 43) `block`>
<terminal (line 13 col 50) `semi`>
<nonterminal (line 13 col 56) `block_proc`>
<ll1_rule_hint (line 14 col 5) ``>
<nonterminal (line 14 col 5) `block_proc`>
<equals (line 14 col 17) `=`>
<terminal (line 14 col 19) `_empty`>
<ll1_rule_hint (line 15 col 5) ``>
<nonterminal (line 15 col 5) `statement`>
<equals (line 15 col 16) `=`>
<nonterminal (line 15 col 18) `ident`>
<terminal (line 15 col 25) `assign`>
<nonterminal (line 15 col 33) `expression`>
<ll1_rule_hint (line 16 col 5) ``>
<nonterminal (line 16 col 5) `statement`>
<equals (line 16 col 16) `=`>
<terminal (line 16 col 18) `call`>
<nonterminal (line 16 col 24) `ident`>
<ll1_rule_hint (line 17 col 5) ``>
<nonterminal (line 17 col 5) `statement`>
<equals (line 17 col 16) `=`>
<terminal (line 17 col 18) `begin`>
<nonterminal (line 17 col 25) `statement`>
<nonterminal (line 17 col 36) `statement_sub1`>
<terminal (line 17 col 52) `end`>
<ll1_rule_hint (line 18 col 5) ``>
<nonterminal (line 18 col 5) `statement`>
<equals (line 18 col 16) `=`>
<terminal (line 18 col 18) `if`>
<nonterminal (line 18 col 22) `condition`>
<terminal (line 18 col 33) `then`>
<nonterminal (line 18 col 39) `statement`>
<ll1_rule_hint (line 19 col 5) ``>
<nonterminal (line 19 col 5) `statement`>
<equals (line 19 col 16) `=`>
<terminal (line 19 col 18) `while`>
<nonterminal (line 19 col 25) `condition`>
<terminal (line 19 col 36) `do`>
<nonterminal (line 19 col 40) `statement`>
<ll1_rule_hint (line 20 col 5) ``>
<nonterminal (line 20 col 5) `statement_sub1`>
<equals (line 20 col 21) `=`>
<terminal (line 20 col 23) `semi`>
<nonterminal (line 20 col 29) `statement`>
<ll1_rule_hint (line 21 col 5) ``>
<nonterminal (line 21 col 5) `statement_sub1`>
<equals (line 21 col 21) `=`>
<terminal (line 21 col 23) `_empty`>
<ll1_rule_hint (line 22 col 5) ``>
<nonterminal (line 22 col 5) `condition`>
<equals (line 22 col 16) `=`>
<terminal (line 22 col 18) `odd`>
<nonterminal (line 22 col 23) `expression`>
<ll1_rule_hint (line 23 col 5) ``>
<nonterminal (line 23 col 5) `condition`>
<equals (line 23 col 16) `=`>
<nonterminal (line 23 col 18) `expression`>
<nonterminal (line 23 col 30) `op`>
<nonterminal (line 23 col 34) `expression`>
<ll1_rule_hint (line 24 col 5) ``>
<nonterminal (line 24 col 5) `op`>
<equals (line 24 col 9) `=`>
<terminal (line 24 col 11) `equal`>
<ll1_rule_hint (line 25 col 5) ``>
<nonterminal (line 25 col 5) `op`>
<equals (line 25 col 9) `=`>
<terminal (line 25 col 11) `pound`>
<ll1_rule_hint (line 26 col 5) ``>
<nonterminal (line 26 col 5) `op`>
<equals (line 26 col 9) `=`>
<terminal (line 26 col 11) `lt`>
<ll1_rule_hint (line 27 col 5) ``>
<nonterminal (line 27 col 5) `op`>
<equals (line 27 col 9) `=`>
<terminal (line 27 col 11) `lteq`>
<ll1_rule_hint (line 28 col 5) ``>
<nonterminal (line 28 col 5) `op`>
<equals (line 28 col 9) `=`>
<terminal (line 28 col 11) `gt`>
<ll1_rule_hint (line 29 col 5) ``>
<nonterminal (line 29 col 5) `op`>
<equals (line 29 col 9) `=`>
<terminal (line 29 col 11) `gteq`>
<ll1_rule_hint (line 30 col 5) ``>
<nonterminal (line 30 col 5) `expression`>
<equals (line 30 col 17) `=`>
<nonterminal (line 30 col 19) `unary_add_op`>
<nonterminal (line 30 col 33) `term`>
<nonterminal (line 30 col 39) `expression_sub1`>
<ll1_rule_hint (line 31 col 5) ``>
<nonterminal (line 31 col 5) `unary_add_op`>
<equals (line 31 col 19) `=`>
<nonterminal (line 31 col 21) `add_op`>
<ll1_rule_hint (line 32 col 5) ``>
<nonterminal (line 32 col 5) `unary_add_op`>
<equals (line 32 col 19) `=`>
<terminal (line 32 col 21) `_empty`>
<ll1_rule_hint (line 33 col 5) ``>
<nonterminal (line 33 col 5) `expression_sub1`>
<equals (line 33 col 22) `=`>
<nonterminal (line 33 col 24) `add_op`>
<nonterminal (line 33 col 32) `expression_sub1`>
<ll1_rule_hint (line 34 col 5) ``>
<nonterminal (line 34 col 5) `expression_sub1`>
<equals (line 34 col 22) `=`>
<terminal (line 34 col 24) `_empty`>
<ll1_rule_hint (line 35 col 5) ``>
<nonterminal (line 35 col 5) `add_op`>
<equals (line 35 col 13) `=`>
<terminal (line 35 col 15) `plus`>
<ll1_rule_hint (line 36 col 5) ``>
<nonterminal (line 36 col 5) `add_op`>
<equals (line 36 col 13) `=`>
<terminal (line 36 col 15) `minus`>
<ll1_rule_hint (line 37 col 5) ``>
<nonterminal (line 37 col 5) `mul_op`>
<equals (line 37 col 13) `=`>
<terminal (line 37 col 15) `times`>
<ll1_rule_hint (line 38 col 5) ``>
<nonterminal (line 38 col 5) `mul_op`>
<equals (line 38 col 13) `=`>
<terminal (line 38 col 15) `divide`>
<ll1_rule_hint (line 39 col 5) ``>
<nonterminal (line 39 col 5) `term`>
<equals (line 39 col 11) `=`>
<nonterminal (line 39 col 13) `factor`>
<nonterminal (line 39 col 21) `term_sub1`>
<ll1_rule_hint (line 40 col 5) ``>
<nonterminal (line 40 col 5) `term_sub1`>
<equals (line 40 col 16) `=`>
<nonterminal (line 40 col 18) `mul_op`>
<nonterminal (line 40 col 26) `term_sub1`>
<ll1_rule_hint (line 41 col 5) ``>
<nonterminal (line 41 col 5) `term_sub1`>
<equals (line 41 col 16) `=`>
<terminal (line 41 col 18) `_empty`>
<ll1_rule_hint (line 42 col 5) ``>
<nonterminal (line 42 col 5) `factor`>
<equals (line 42 col 13) `=`>
<nonterminal (line 42 col 15) `ident`>
<ll1_rule_hint (line 43 col 5) ``>
<nonterminal (line 43 col 5) `factor`>
<equals (line 43 col 13) `=`>
<nonterminal (line 43 col 15) `number`>
<ll1_rule_hint (line 44 col 5) ``>
<nonterminal (line 44 col 5) `factor`>
<equals (line 44 col 13) `=`>
<terminal (line 44 col 15) `lparen`>
<nonterminal (line 44 col 23) `expression`>
<terminal (line 44 col 35) `rparen`>
<ll1_rule_hint (line 45 col 5) ``>
<nonterminal (line 45 col 5) `ident`>
<equals (line 45 col 12) `=`>
<terminal (line 45 col 14) `ident`>
<ll1_rule_hint (line 46 col 5) ``>
<nonterminal (line 46 col 5) `number`>
<equals (line 46 col 13) `=`>
<terminal (line 46 col 15) `number`>
<rbrace (line 47 col 3) `}`>
<rbrace (line 48 col 1) `}`>