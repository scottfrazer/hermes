<grammar (line 1 col 1) `grammar`>
<lbrace (line 1 col 9) `{`>
<parser_ll1 (line 2 col 3) `parser<ll1>`>
<lbrace (line 2 col 15) `{`>
<ll1_rule_hint (line 3 col 5) ``>
<nonterminal (line 3 col 5) `start`>
<equals (line 3 col 12) `=`>
<identifier (line 3 col 14) `list`>
<lparen (line 3 col 18) `(`>
<nonterminal (line 3 col 19) `sub`>
<comma (line 3 col 23) `,`>
<terminal (line 3 col 25) `comma`>
<rparen (line 3 col 31) `)`>
<arrow (line 3 col 33) `->`>
<identifier (line 3 col 36) `Statements`>
<lparen (line 3 col 46) `(`>
<identifier (line 3 col 48) `list`>
<equals (line 3 col 52) `=`>
<nonterminal_reference (line 3 col 53) `0`>
<rparen (line 3 col 56) `)`>
<ll1_rule_hint (line 4 col 5) ``>
<nonterminal (line 4 col 5) `sub`>
<equals (line 4 col 10) `=`>
<nonterminal (line 4 col 12) `item`>
<arrow (line 4 col 18) `->`>
<identifier (line 4 col 21) `Item`>
<lparen (line 4 col 25) `(`>
<identifier (line 4 col 27) `name`>
<equals (line 4 col 31) `=`>
<nonterminal_reference (line 4 col 32) `0`>
<rparen (line 4 col 35) `)`>
<ll1_rule_hint (line 5 col 5) ``>
<nonterminal (line 5 col 5) `sub`>
<equals (line 5 col 10) `=`>
<nonterminal (line 5 col 12) `e`>
<ll1_rule_hint (line 6 col 5) ``>
<nonterminal (line 6 col 5) `item`>
<equals (line 6 col 11) `=`>
<terminal (line 6 col 13) `b`>
<ll1_rule_hint (line 7 col 5) ``>
<nonterminal (line 7 col 5) `item`>
<equals (line 7 col 11) `=`>
<terminal (line 7 col 13) `a`>
<ll1_rule_hint (line 8 col 5) ``>
<nonterminal (line 8 col 5) `e`>
<equals (line 8 col 8) `=`>
<parser_expression (line 8 col 10) `parser<expression>`>
<lbrace (line 8 col 29) `{`>
<lparen (line 9 col 7) `(`>
<asterisk (line 9 col 7) `*`>
<colon (line 9 col 7) `:`>
<left (line 9 col 7) `left`>
<rparen (line 9 col 7) `)`>
<expr_rule_hint (line 9 col 16) ``>
<nonterminal (line 9 col 16) `e`>
<equals (line 9 col 16) `=`>
<infix_rule_hint (line 9 col 16) ``>
<nonterminal (line 9 col 16) `e`>
<terminal (line 9 col 16) `add`>
<nonterminal (line 9 col 16) `e`>
<arrow (line 9 col 32) `->`>
<identifier (line 9 col 35) `Add`>
<lparen (line 9 col 38) `(`>
<identifier (line 9 col 40) `l`>
<equals (line 9 col 41) `=`>
<nonterminal_reference (line 9 col 42) `0`>
<comma (line 9 col 44) `,`>
<identifier (line 9 col 46) `r`>
<equals (line 9 col 47) `=`>
<nonterminal_reference (line 9 col 48) `2`>
<rparen (line 9 col 51) `)`>
<lparen (line 10 col 7) `(`>
<dash (line 10 col 7) `-`>
<colon (line 10 col 7) `:`>
<left (line 10 col 7) `left`>
<rparen (line 10 col 7) `)`>
<expr_rule_hint (line 10 col 16) ``>
<nonterminal (line 10 col 16) `e`>
<equals (line 10 col 16) `=`>
<infix_rule_hint (line 10 col 16) ``>
<nonterminal (line 10 col 16) `e`>
<terminal (line 10 col 16) `subtract`>
<nonterminal (line 10 col 16) `e`>
<arrow (line 10 col 37) `->`>
<identifier (line 10 col 40) `Sub`>
<lparen (line 10 col 43) `(`>
<identifier (line 10 col 45) `l`>
<equals (line 10 col 46) `=`>
<nonterminal_reference (line 10 col 47) `0`>
<comma (line 10 col 49) `,`>
<identifier (line 10 col 51) `r`>
<equals (line 10 col 52) `=`>
<nonterminal_reference (line 10 col 53) `2`>
<rparen (line 10 col 56) `)`>
<lparen (line 11 col 7) `(`>
<asterisk (line 11 col 7) `*`>
<colon (line 11 col 7) `:`>
<left (line 11 col 7) `left`>
<rparen (line 11 col 7) `)`>
<expr_rule_hint (line 11 col 16) ``>
<nonterminal (line 11 col 16) `e`>
<equals (line 11 col 16) `=`>
<infix_rule_hint (line 11 col 16) ``>
<nonterminal (line 11 col 16) `e`>
<terminal (line 11 col 16) `multiply`>
<nonterminal (line 11 col 16) `e`>
<arrow (line 11 col 37) `->`>
<identifier (line 11 col 40) `Mul`>
<lparen (line 11 col 43) `(`>
<identifier (line 11 col 45) `l`>
<equals (line 11 col 46) `=`>
<nonterminal_reference (line 11 col 47) `0`>
<comma (line 11 col 49) `,`>
<identifier (line 11 col 51) `r`>
<equals (line 11 col 52) `=`>
<nonterminal_reference (line 11 col 53) `2`>
<rparen (line 11 col 56) `)`>
<lparen (line 12 col 7) `(`>
<dash (line 12 col 7) `-`>
<colon (line 12 col 7) `:`>
<left (line 12 col 7) `left`>
<rparen (line 12 col 7) `)`>
<expr_rule_hint (line 12 col 16) ``>
<nonterminal (line 12 col 16) `e`>
<equals (line 12 col 16) `=`>
<infix_rule_hint (line 12 col 16) ``>
<nonterminal (line 12 col 16) `e`>
<terminal (line 12 col 16) `divide`>
<nonterminal (line 12 col 16) `e`>
<arrow (line 12 col 35) `->`>
<identifier (line 12 col 38) `Div`>
<lparen (line 12 col 41) `(`>
<identifier (line 12 col 43) `l`>
<equals (line 12 col 44) `=`>
<nonterminal_reference (line 12 col 45) `0`>
<comma (line 12 col 47) `,`>
<identifier (line 12 col 49) `r`>
<equals (line 12 col 50) `=`>
<nonterminal_reference (line 12 col 51) `2`>
<rparen (line 12 col 54) `)`>
<lparen (line 13 col 7) `(`>
<asterisk (line 13 col 7) `*`>
<colon (line 13 col 7) `:`>
<unary (line 13 col 7) `unary`>
<rparen (line 13 col 7) `)`>
<expr_rule_hint (line 13 col 17) ``>
<nonterminal (line 13 col 17) `e`>
<equals (line 13 col 17) `=`>
<prefix_rule_hint (line 13 col 17) ``>
<terminal (line 13 col 17) `subtract`>
<nonterminal (line 13 col 17) `e`>
<arrow (line 13 col 35) `->`>
<identifier (line 13 col 38) `UMinus`>
<lparen (line 13 col 44) `(`>
<identifier (line 13 col 46) `arg`>
<equals (line 13 col 49) `=`>
<nonterminal_reference (line 13 col 50) `1`>
<rparen (line 13 col 53) `)`>
<lparen (line 14 col 7) `(`>
<asterisk (line 14 col 7) `*`>
<colon (line 14 col 7) `:`>
<left (line 14 col 7) `left`>
<rparen (line 14 col 7) `)`>
<expr_rule_hint (line 14 col 16) ``>
<nonterminal (line 14 col 16) `e`>
<equals (line 14 col 16) `=`>
<mixfix_rule_hint (line 14 col 16) ``>
<terminal (line 14 col 21) `identifier`>
<expression_divider (line 14 col 33) `<=>`>
<terminal (line 14 col 37) `lparen`>
<identifier (line 14 col 45) `list`>
<lparen (line 14 col 49) `(`>
<nonterminal (line 14 col 50) `e`>
<comma (line 14 col 52) `,`>
<terminal (line 14 col 54) `comma`>
<rparen (line 14 col 60) `)`>
<terminal (line 14 col 62) `rparen`>
<arrow (line 14 col 70) `->`>
<identifier (line 14 col 73) `FuncCall`>
<lparen (line 14 col 81) `(`>
<identifier (line 14 col 83) `name`>
<equals (line 14 col 87) `=`>
<nonterminal_reference (line 14 col 88) `0`>
<comma (line 14 col 90) `,`>
<identifier (line 14 col 92) `params`>
<equals (line 14 col 98) `=`>
<nonterminal_reference (line 14 col 99) `2`>
<rparen (line 14 col 102) `)`>
<expr_rule_hint (line 15 col 7) ``>
<nonterminal (line 15 col 7) `e`>
<equals (line 15 col 7) `=`>
<mixfix_rule_hint (line 15 col 7) ``>
<terminal (line 15 col 12) `lsquare`>
<identifier (line 15 col 21) `list`>
<lparen (line 15 col 25) `(`>
<nonterminal (line 15 col 26) `e`>
<comma (line 15 col 28) `,`>
<terminal (line 15 col 30) `comma`>
<rparen (line 15 col 36) `)`>
<terminal (line 15 col 38) `rsquare`>
<arrow (line 15 col 47) `->`>
<identifier (line 15 col 50) `ListDecl`>
<lparen (line 15 col 58) `(`>
<identifier (line 15 col 60) `items`>
<equals (line 15 col 65) `=`>
<nonterminal_reference (line 15 col 66) `1`>
<rparen (line 15 col 69) `)`>
<expr_rule_hint (line 16 col 7) ``>
<nonterminal (line 16 col 7) `e`>
<equals (line 16 col 7) `=`>
<mixfix_rule_hint (line 16 col 7) ``>
<terminal (line 16 col 12) `lbrace`>
<identifier (line 16 col 20) `list`>
<lparen (line 16 col 24) `(`>
<nonterminal (line 16 col 25) `e`>
<comma (line 16 col 27) `,`>
<terminal (line 16 col 29) `comma`>
<rparen (line 16 col 35) `)`>
<terminal (line 16 col 37) `rbrace`>
<arrow (line 16 col 45) `->`>
<identifier (line 16 col 48) `SetDecl`>
<lparen (line 16 col 55) `(`>
<identifier (line 16 col 57) `items`>
<equals (line 16 col 62) `=`>
<nonterminal_reference (line 16 col 63) `1`>
<rparen (line 16 col 66) `)`>
<expr_rule_hint (line 17 col 7) ``>
<nonterminal (line 17 col 7) `e`>
<equals (line 17 col 7) `=`>
<mixfix_rule_hint (line 17 col 7) ``>
<terminal (line 17 col 12) `lparen`>
<nonterminal (line 17 col 20) `e`>
<terminal (line 17 col 23) `rparen`>
<expr_rule_hint (line 18 col 7) ``>
<nonterminal (line 18 col 7) `e`>
<equals (line 18 col 7) `=`>
<mixfix_rule_hint (line 18 col 7) ``>
<terminal (line 18 col 12) `identifier`>
<expr_rule_hint (line 19 col 7) ``>
<nonterminal (line 19 col 7) `e`>
<equals (line 19 col 7) `=`>
<mixfix_rule_hint (line 19 col 7) ``>
<terminal (line 19 col 12) `number`>
<rbrace (line 20 col 5) `}`>
<rbrace (line 21 col 3) `}`>
<rbrace (line 22 col 1) `}`>